{"version":3,"sources":["js/index.js"],"names":["start","document","getElementById","quiz","question","qImg","choiceA","choiceB","choiceC","counter","timeGauge","progress","scoreDiv","questions","imgSrc","correct","lastQuestion","length","runningQuestion","count","questionTime","gaugeWidth","gaugeUnit","TIMER","score","renderQuestion","q","innerHTML","addEventListener","startQuiz","style","display","renderProgress","renderCounter","setInterval","qIndex","width","answerIsWrong","clearInterval","scoreRender","checkAnswer","answer","answerIsCorrect","backgroundColor","scorePerCent","Math","round","img"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["// select all elements\r\nconst start = document.getElementById(\"start\");\r\nconst quiz = document.getElementById(\"quiz\");\r\nconst question = document.getElementById(\"question\");\r\nconst qImg = document.getElementById(\"qImg\");\r\nconst choiceA = document.getElementById(\"A\");\r\nconst choiceB = document.getElementById(\"B\");\r\nconst choiceC = document.getElementById(\"C\");\r\nconst counter = document.getElementById(\"counter\");\r\nconst timeGauge = document.getElementById(\"timeGauge\");\r\nconst progress = document.getElementById(\"progress\");\r\nconst scoreDiv = document.getElementById(\"scoreContainer\");\r\n\r\n// create our questions\r\nlet questions = [\r\n    {\r\n        question : \"What does HTML stand for?\",\r\n        imgSrc : \"img/html.png\",\r\n        choiceA : \"Correct\",\r\n        choiceB : \"Wrong\",\r\n        choiceC : \"Wrong\",\r\n        correct : \"A\"\r\n    },{\r\n        question : \"What does CSS stand for?\",\r\n        imgSrc : \"img/css.png\",\r\n        choiceA : \"Wrong\",\r\n        choiceB : \"Correct\",\r\n        choiceC : \"Wrong\",\r\n        correct : \"B\"\r\n    },{\r\n        question : \"What does JS stand for?\",\r\n        imgSrc : \"img/js.png\",\r\n        choiceA : \"Wrong\",\r\n        choiceB : \"Wrong\",\r\n        choiceC : \"Correct\",\r\n        correct : \"C\"\r\n    }\r\n];\r\n\r\n// create some variables\r\n\r\nconst lastQuestion = questions.length - 1;\r\nlet runningQuestion = 0;\r\nlet count = 0;\r\nconst questionTime = 10; // 10s\r\nconst gaugeWidth = 150; // 150px\r\nconst gaugeUnit = gaugeWidth / questionTime;\r\nlet TIMER;\r\nlet score = 0;\r\n\r\n// render a question\r\nfunction renderQuestion(){\r\n    let q = questions[runningQuestion];\r\n    \r\n    question.innerHTML = \"<p>\"+ q.question +\"</p>\";\r\n    qImg.innerHTML = \"<img src=\"+ q.imgSrc +\">\";\r\n    choiceA.innerHTML = q.choiceA;\r\n    choiceB.innerHTML = q.choiceB;\r\n    choiceC.innerHTML = q.choiceC;\r\n}\r\n\r\nstart.addEventListener(\"click\",startQuiz);\r\n\r\n// start quiz\r\nfunction startQuiz(){\r\n    start.style.display = \"none\";\r\n    renderQuestion();\r\n    quiz.style.display = \"block\";\r\n    renderProgress();\r\n    renderCounter();\r\n    TIMER = setInterval(renderCounter,1000); // 1000ms = 1s\r\n}\r\n\r\n// render progress\r\nfunction renderProgress(){\r\n    for(let qIndex = 0; qIndex <= lastQuestion; qIndex++){\r\n        progress.innerHTML += \"<div class='prog' id=\"+ qIndex +\"></div>\";\r\n    }\r\n}\r\n\r\n// counter render\r\n\r\nfunction renderCounter(){\r\n    if(count <= questionTime){\r\n        counter.innerHTML = count;\r\n        timeGauge.style.width = count * gaugeUnit + \"px\";\r\n        count++\r\n    }else{\r\n        count = 0;\r\n        // change progress color to red\r\n        answerIsWrong();\r\n        if(runningQuestion < lastQuestion){\r\n            runningQuestion++;\r\n            renderQuestion();\r\n        }else{\r\n            // end the quiz and show the score\r\n            clearInterval(TIMER);\r\n            scoreRender();\r\n        }\r\n    }\r\n}\r\n\r\n// checkAnwer\r\n\r\nfunction checkAnswer(answer){\r\n    if( answer == questions[runningQuestion].correct){\r\n        // answer is correct\r\n        score++;\r\n        // change progress color to green\r\n        answerIsCorrect();\r\n    }else{\r\n        // answer is wrong\r\n        // change progress color to red\r\n        answerIsWrong();\r\n    }\r\n    count = 0;\r\n    if(runningQuestion < lastQuestion){\r\n        runningQuestion++;\r\n        renderQuestion();\r\n    }else{\r\n        // end the quiz and show the score\r\n        clearInterval(TIMER);\r\n        scoreRender();\r\n    }\r\n}\r\n\r\n// answer is correct\r\nfunction answerIsCorrect(){\r\n    document.getElementById(runningQuestion).style.backgroundColor = \"#0f0\";\r\n}\r\n\r\n// answer is Wrong\r\nfunction answerIsWrong(){\r\n    document.getElementById(runningQuestion).style.backgroundColor = \"#f00\";\r\n}\r\n\r\n// score render\r\nfunction scoreRender(){\r\n    scoreDiv.style.display = \"block\";\r\n    \r\n    // calculate the amount of question percent answered by the user\r\n    const scorePerCent = Math.round(100 * score/questions.length);\r\n    \r\n    // choose the image based on the scorePerCent\r\n    let img = (scorePerCent >= 80) ? \"img/5.png\" :\r\n              (scorePerCent >= 60) ? \"img/4.png\" :\r\n              (scorePerCent >= 40) ? \"img/3.png\" :\r\n              (scorePerCent >= 20) ? \"img/2.png\" :\r\n              \"img/1.png\";\r\n    \r\n    scoreDiv.innerHTML = \"<img src=\"+ img +\">\";\r\n    scoreDiv.innerHTML += \"<p>\"+ scorePerCent +\"%</p>\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}